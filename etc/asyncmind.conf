

#upstream ipfs_nodes {
#        server threadripper0.lan:8082;
#        server doombox.lan:8082;
#        # Add more IPFS nodes if needed
#    }


#server {
#    server_name diffusion.stevenjoseph.in;
#    server_tokens off;
#    listen 80;
#
#    access_log syslog:server=unix:/dev/log;
#    #error_log syslog:server=unix:/dev/log;
#    location ~* / {
#       resolver 127.0.0.1 valid=30s;
#
#        proxy_pass http://127.0.0.1:9001;
#        proxy_redirect off;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Scheme $scheme;
#        proxy_set_header X-app-key $http_x_app_key;
#        proxy_read_timeout 300s;
#    }
#
#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/stevenjoseph.in/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/stevenjoseph.in/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#
#}
server {
    server_name staging.stevenjoseph.in;
    server_tokens off;
    location / {
        add_header Cache-Control "no-cache";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Csrf-Token';
        root /var/www/staging.stevenjoseph.in/;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.stevenjoseph.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.stevenjoseph.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    server_name stevenjoseph.in ipfs.stevenjoseph.in;
    server_tokens off;
    # lhttps://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04
    #ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    #ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    access_log syslog:server=unix:/dev/log;
    #error_log syslog:server=unix:/dev/log;
    #location @handle_404 {
    #        log_not_found off;
    #        access_log /var/log/nginx/404.log;
    #        return 404;
    #}

    #error_page  404              /404.html;
    #error_page 404 = @handle_404;

    #error_page 404 @notfound;
    #error_page 502 @maintenance;


    #location / {
    #        proxy_pass http://ipfs_nodes/ipns/k51qzi5uqu5dhbmh37zoop02hoyomszbonbx4l8p20zqsx45y326le27htbzeu/;
    #        #proxy_pass http://ipfs_nodes/ipfs/Qmeqegz4aZyrmDJnRt3stZVEdTurpxNtYjgMnEu94vEa8t/;
    #        proxy_set_header Host $host;
    #        proxy_set_header X-Real-IP $remote_addr;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #        # Specify conditions for trying the next upstream server
    #        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    #        proxy_next_upstream_timeout 5s;
    #        proxy_next_upstream_tries 2; # Number of tries for each IPFS node
    #    }
    location ~* /api/?(.*) {
        proxy_pass http://threadripper0.lan:9091;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-app-key $http_x_app_key;
        proxy_read_timeout 300s;
    }
    #location ^~ /ipfs/ {
    #    proxy_pass http://ipfs_nodes;
    #    proxy_set_header Host $host;
    #    allow all;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    # }
    location / {
        add_header Cache-Control "no-cache";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Csrf-Token';
        root /var/www/stevenjoseph.in/;
    }




    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/stevenjoseph.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/stevenjoseph.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = ipfs.stevenjoseph.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = stevenjoseph.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name stevenjoseph.in ipfs.stevenjoseph.in;
    listen 0.0.0.0:80;
    return 404; # managed by Certbot
}

server {
    if ($host = staging.stevenjoseph.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name staging.stevenjoseph.in;
    listen 0.0.0.0:80;
    return 404; # managed by Certbot
}

server {
    server_name asyncmind.xyz ipfs.asyncmind.xyz;
    server_tokens off;
    # lhttps://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04
    #ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    #ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    access_log syslog:server=unix:/dev/log;
    #error_log syslog:server=unix:/dev/log;
    #location @handle_404 {
    #        log_not_found off;
    #        access_log /var/log/nginx/404.log;
    #        return 404;
    #}

    #error_page  404              /404.html;
    #error_page 404 = @handle_404;

    #error_page 404 @notfound;
    #error_page 502 @maintenance;


    #location / {
    #        proxy_pass http://ipfs_nodes/ipns/k51qzi5uqu5dhbmh37zoop02hoyomszbonbx4l8p20zqsx45y326le27htbzeu/;
    #        #proxy_pass http://ipfs_nodes/ipfs/Qmeqegz4aZyrmDJnRt3stZVEdTurpxNtYjgMnEu94vEa8t/;
    #        proxy_set_header Host $host;
    #        proxy_set_header X-Real-IP $remote_addr;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #        # Specify conditions for trying the next upstream server
    #        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    #        proxy_next_upstream_timeout 5s;
    #        proxy_next_upstream_tries 2; # Number of tries for each IPFS node
    #    }
    location ~* /api/?(.*) {
        proxy_pass http://threadripper0:8088;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-app-key $http_x_app_key;
        proxy_read_timeout 300s;
    }
    #location ^~ /ipfs/ {
    #    proxy_pass http://ipfs_nodes;
    #    proxy_set_header Host $host;
    #    allow all;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    # }
    location / {
        add_header Cache-Control "no-cache";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Csrf-Token';
        root /var/www/asyncmind.xyz/;
    }
    location /pkg/ {
        root /var/cache/pacman/pkg;
        try_files $uri $uri/;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/asyncmind.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/asyncmind.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = asyncmind.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name asyncmind.xyz ipfs.asyncmind.xyz;
    listen 80;
    return 404; # managed by Certbot


}
